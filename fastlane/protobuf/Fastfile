require_relative 'repository'
require_relative 'converter'
require_relative '../commands/command'
require_relative '../commands/unity/parser'
require_relative '../system/project'
require_relative '../unity/project'
require_relative '../unity/app'
require_relative '../build/common/service'

lane :protobuf_create_source_file_list do
  server_src_output_path = File.expand_path('../../server/api/PlayFab/PlayFabApi/auto_generated')
  FileUtils.remove_dir(server_src_output_path, force: true)
  FileUtils.mkdir_p(server_src_output_path)

  client_src_output_path = File.join(Unity::Project.new(System::Project.repo_root_path).assets_path, 'ProtoBuf/AutoGenerated')
  FileUtils.remove_dir(client_src_output_path, force: true)
  FileUtils.mkdir_p(client_src_output_path)

  proto_messages_root = File.expand_path('../idl/messages')
  ProtoBuf::Repository.new(proto_messages_root).message_path_list.each do |file|
    p "convert file => #{file}"
    ProtoBuf::Converter.convert(proto_messages_root, server_src_output_path, file)
    ProtoBuf::Converter.convert(proto_messages_root, client_src_output_path, file)
  end
end
